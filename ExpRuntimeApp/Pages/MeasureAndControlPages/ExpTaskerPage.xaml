<Page x:Class="ExpRuntimeApp.Pages.MeasureAndControlPages.ExpTaskerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ExpRuntimeApp.Pages.MeasureAndControlPages"
      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:tasker="clr-namespace:ExpRuntimeApp.ExpTask"
      xmlns:module="clr-namespace:ExpRuntimeApp.Modules"
      mc:Ignorable="d" 
      d:DesignHeight="680" d:DesignWidth="800"
      Title="任务列队编辑"
      FontSize="18"
      DataContext="{StaticResource ExpViewModule}"
      >
    <Page.Resources>
        <module:TaskerStateConverter x:Key="TaskerStateConverter"/>
        <module:ToleranceConverter x:Key="ToleranceConverter"/>
        <module:TaskerCanEditConverter x:Key="TaskerCanEdit"/>
        <module:DoubleNullToBoolenNull x:Key="DoubelToBoolen"/>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Margin="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <DataGrid x:Name="TaskerGrid" Grid.Row="0" Grid.Column="0" Margin="3" BorderThickness="2" BorderBrush="AliceBlue" AutoGenerateColumns="False" SelectedIndex="0"
                      ItemsSource="{Binding Path=Taskers}" HorizontalContentAlignment="Center" HeadersVisibility="All"
                      SelectionChanged="TaskerGrid_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="状态" Binding="{Binding Path=State,Converter={StaticResource TaskerStateConverter},Mode=OneWay}"/>
                    <DataGridTextColumn Header="时间间隔(s)" Binding="{Binding Path=Interval}"/>
                    <DataGridTextColumn Header="总记录次数" Binding="{Binding Path=ThroughCount}"/>
                    <DataGridTextColumn Header="当前执行次数" Binding="{Binding Path=ThroughTick,Mode=OneWay}"/>
                </DataGrid.Columns>
            </DataGrid>

            <StackPanel Grid.Column="1" Margin="3" VerticalAlignment="Center" Cursor="Hand">
                <Button x:Name="AddBtn" Style="{StaticResource MetroCircleButtonStyle}" BorderBrush="GreenYellow" Content="{StaticResource appbar_add}" ToolTip="以选中的工步为源创建新的工步。"
                        Click="AddBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
                <Button x:Name="InsertBtn" Style="{StaticResource MetroCircleButtonStyle}" BorderBrush="GreenYellow" Content="{StaticResource appbar_arrow_right}" ToolTip="在选中工步后插入新工步。"
                        Click="InsertBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
                <Button x:Name="DeleteBtn" Style="{StaticResource MetroCircleButtonStyle}"
                        BorderBrush="GreenYellow"
                        IsEnabled="{Binding ElementName=RunBtn,Path=IsEnabled}"
                        Content="{StaticResource appbar_delete}" ToolTip="将选中的工步从列队中删除。"
                        Click="DeleteBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
                <Button x:Name="UpSwapBtn" Style="{StaticResource MetroCircleButtonStyle}"
                        BorderBrush="GreenYellow"
                        IsEnabled="{Binding ElementName=RunBtn,Path=IsEnabled}"
                        Content="{StaticResource appbar_arrow_up}" ToolTip="将选中的工步上移。"
                        Click="UpSwapBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
                <Button x:Name="DownSwapBtn" Style="{StaticResource MetroCircleButtonStyle}"
                        BorderBrush="GreenYellow"
                        IsEnabled="{Binding ElementName=RunBtn,Path=IsEnabled}"
                        Content="{StaticResource appbar_arrow_down}" ToolTip="将选中的工步下移。"
                        Click="DownSwapBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
                <Button x:Name="RunBtn" Style="{StaticResource MetroCircleButtonStyle}"
                        BorderBrush="GreenYellow"
                        Content="{StaticResource appbar_timer_play}" ToolTip="运行选中的工步。"
                        Click="RunBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
                <Button x:Name="StopBtn" Style="{StaticResource MetroCircleButtonStyle}"
                        BorderBrush="GreenYellow"
                        Content="{StaticResource appbar_timer_pause}" ToolTip="停止选中的工步。"
                        Click="StopBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="DarkGoldenrod" Opacity="0.45"/>
                    </Button.Background>
                </Button>
            </StackPanel>            
        </Grid>

        <Grid Grid.Row="0" Grid.Column="1" Margin="3">
            <ListView Grid.Row="0" Margin="3" BorderThickness="2" BorderBrush="AliceBlue" IsEnabled="{Binding Path=State,Converter={StaticResource TaskerCanEdit}}" DataContext="{Binding ElementName=TaskerGrid,Path=SelectedItem}" ItemsSource="{Binding Path=Elements}" HorizontalContentAlignment="Center" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type tasker:TaskElement}">
                        <Border BorderThickness="2" BorderBrush="DarkGoldenrod" CornerRadius="8" Padding="12">
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Top" Margin="3,5" VerticalAlignment="Center" HorizontalAlignment="Left"
                                           FontSize="16" FontWeight="Bold"
                                           Text="{Binding Path=TargetChannel.Label}"/>
                                <metro:ToggleSwitch DockPanel.Dock="Top" 
                                                    Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                                                                                       
                                                    
                                                    Header="加入控制：" OnLabel="是" OffLabel="否" IsChecked="{Binding Path=TargetValue,Converter={StaticResource DoubelToBoolen}}"/>
                                <TextBlock DockPanel.Dock="Top" Margin="3,5" VerticalAlignment="Center" HorizontalAlignment="Left"
                                           Text="控制值："/>
                                <metro:NumericUpDown DockPanel.Dock="Top" Margin="3,5" VerticalAlignment="Center" HorizontalAlignment="Left" MinWidth="120"
                                                     Minimum="{Binding Path=TargetChannel.RangeLow}"
                                                     Maximum="{Binding Path=TargetChannel.RangeHigh}"
                                                     StringFormat="{}{0:F1}"
                                                     Value="{Binding Path=TargetValue}"/>
                                <TextBlock DockPanel.Dock="Top" Margin="3,5" VerticalAlignment="Center" HorizontalAlignment="Left"
                                           Text="控制公差："/>
                                <metro:NumericUpDown DockPanel.Dock="Top" Margin="3,5" VerticalAlignment="Center" HorizontalAlignment="Left" MinWidth="120"
                                                     Minimum="{Binding Path=TargetChannel.RangeLow}"
                                                     Maximum="{Binding Path=TargetChannel.RangeHigh}"
                                                     StringFormat="± {0:F1}"
                                                     Value="{Binding Path=ToleranceValue}"/>
                                
                            </DockPanel>
                        </Border>
                    </DataTemplate>
                    
                </ListView.ItemTemplate>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Path=Width}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
        </Grid>
    </Grid>
</Page>
